/*
 * ContactsView.java
 * Displays a user's list of conacts.  Also contains options for collaborations
 * and contact management.
 */
package sod;

import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;

// The application's main frame.
public class ContactsView extends FrameView {

    // Methods
    public ContactsView(SingleFrameApplication app) {
        super(app);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactsList = new javax.swing.JList();
        jMenuBar1 = new javax.swing.JMenuBar();
        newMenu = new javax.swing.JMenu();
        collaborationMenuItem = new javax.swing.JMenuItem();
        conactMenuItem = new javax.swing.JMenuItem();
        fileTransferMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        removeContactMenuItem = new javax.swing.JMenuItem();
        changeNameMenuItem = new javax.swing.JMenuItem();
        currentIPMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        contactsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        contactsList.setName("contactsList"); // NOI18N
        contactsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(contactsList);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sod.SODApp.class).getContext().getResourceMap(ContactsView.class);
        contactsList.getAccessibleContext().setAccessibleName(resourceMap.getString("jList1.AccessibleContext.accessibleName")); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        newMenu.setText(resourceMap.getString("newMenu.text")); // NOI18N
        newMenu.setIconTextGap(0);
        newMenu.setName("newMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(sod.SODApp.class).getContext().getActionMap(ContactsView.class, this);
        collaborationMenuItem.setAction(actionMap.get("showDiscussionSettings")); // NOI18N
        collaborationMenuItem.setText(resourceMap.getString("collaborationMenuItem.text")); // NOI18N
        collaborationMenuItem.setName("collaborationMenuItem"); // NOI18N
        newMenu.add(collaborationMenuItem);

        conactMenuItem.setAction(actionMap.get("AddContact")); // NOI18N
        conactMenuItem.setText(resourceMap.getString("conactMenuItem.text")); // NOI18N
        conactMenuItem.setName("conactMenuItem"); // NOI18N
        newMenu.add(conactMenuItem);

        fileTransferMenuItem.setAction(actionMap.get("Transfer")); // NOI18N
        fileTransferMenuItem.setText(resourceMap.getString("fileTransferMenuItem.text")); // NOI18N
        fileTransferMenuItem.setName("fileTransferMenuItem"); // NOI18N
        newMenu.add(fileTransferMenuItem);

        jMenuBar1.add(newMenu);

        editMenu.setText(resourceMap.getString("editMenu.text")); // NOI18N
        editMenu.setName("editMenu"); // NOI18N

        removeContactMenuItem.setAction(actionMap.get("RemoveContact")); // NOI18N
        removeContactMenuItem.setText(resourceMap.getString("removeContactMenuItem.text")); // NOI18N
        removeContactMenuItem.setName("removeContactMenuItem"); // NOI18N
        editMenu.add(removeContactMenuItem);

        changeNameMenuItem.setAction(actionMap.get("ChangeName")); // NOI18N
        changeNameMenuItem.setText(resourceMap.getString("changeNameMenuItem.text")); // NOI18N
        changeNameMenuItem.setName("changeNameMenuItem"); // NOI18N
        editMenu.add(changeNameMenuItem);

        currentIPMenuItem.setAction(actionMap.get("CurrentIP")); // NOI18N
        currentIPMenuItem.setText(resourceMap.getString("currentIPMenuItem.text")); // NOI18N
        currentIPMenuItem.setName("currentIPMenuItem"); // NOI18N
        editMenu.add(currentIPMenuItem);

        jMenuBar1.add(editMenu);

        setComponent(mainPanel);
        setMenuBar(jMenuBar1);
    }// </editor-fold>//GEN-END:initComponents

    private void contactsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactsListMouseClicked
        if (evt.getClickCount() == 2) {
            int[] i = contactsList.getSelectedIndices();
            SODApp.getApplication().hostChat(true, false, "Default", i);
        }
    }//GEN-LAST:event_contactsListMouseClicked

    @Action
    public void newMessage() {
        //SODApp.getApplication().newMessage();
    }

    @Action
    public void Transfer() {
        SODApp.getApplication().showTransfer();
    }

    @Action
    public void showDiscussionSettings() {
        SODApp.getApplication().showDiscuss();
    }

    @Action
    public void AddContact() {
        SODApp.getApplication().showAdd();
    }

    @Action
    public void RemoveContact() {
        SODApp.getApplication().removeContact(contactsList.getSelectedIndex());
    }

    @Action
    public void ChangeName() {
        SODApp.getApplication().showSettings();
    }

    @Action
    public void CurrentIP() {
        SODApp.getApplication().showIP();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem changeNameMenuItem;
    private javax.swing.JMenuItem collaborationMenuItem;
    private javax.swing.JMenuItem conactMenuItem;
    public javax.swing.JList contactsList;
    private javax.swing.JMenuItem currentIPMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem fileTransferMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu newMenu;
    private javax.swing.JMenuItem removeContactMenuItem;
    // End of variables declaration//GEN-END:variables

    public void updateList() {
        //String[] n = SODApp.getApplication().concontroller.getAllNames();
        //To display just names use n instead.
        Contacts.Contact[] a = SODApp.getApplication().concontroller.getAllContacts();
        contactsList.setListData(a);
    }
}
